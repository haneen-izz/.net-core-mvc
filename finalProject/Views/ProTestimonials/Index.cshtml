@model IEnumerable<finalProject.Models.ProTestimonial>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<button id="export" class="btn btn-success text-white ">Excel</button>
    <button id="export1" onclick="exportTableToCSV('members.csv')" class="btn btn-danger" hidden>CSV</button>
    <button class="btn btn-danger" onclick="printTable();"><span class="glyphicon glyphicon-print"></span> Print</button>
    <div class="card-block table-border-style">
        <div class="table-responsive">
            <table class="table table-hover" id="tableData">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TestimonialText)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TestimonialText)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserId)
            </td>
            <td>
                <a style="color:black ; text-decoration:none" asp-action="Edit" asp-route-id="@item.TestimonialId">Edit</a> |
                <a style="color:black ; text-decoration:none" asp-action="Details" asp-route-id="@item.TestimonialId">Details</a> |
                <a style="color:black ; text-decoration:none" asp-action="Delete" asp-route-id="@item.TestimonialId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>



</div>

</div>

<script>




    function exportTableToCSV(filename) {
        var csv = [];
        var rows = document.querySelectorAll("table tr");
        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll("td, th");
            for (var j = 0; j < cols.length; j++)
                row.push(cols[j].innerText);
            csv.push(row.join(","));
        }

        downloadCSV(csv.join("\n"), filename);
    }

    function downloadCSV(csv, filename) {
        var csvFile;
        var downloadLink;

        csvFile = new Blob([csv], { type: "text/csv" });

        downloadLink = document.createElement("a");

        downloadLink.download = filename;
        downloadLink.href = window.URL.createObjectURL(csvFile);

        downloadLink.style.display = "none";

        document.body.appendChild(downloadLink);

        downloadLink.click();
    }

    document.getElementById('export').onclick = function () {
        var tableId = document.getElementById('tableData').id;
        htmlTableToExcel(tableId, filename = '');
    }
    var htmlTableToExcel = function (tableId, fileName = '') {
        var downloadedFileName = 'excel_table_data';
        var TableDataType = 'application/vnd.ms-excel';
        var selectTable = document.getElementById(tableId);
        var htmlTable = selectTable.outerHTML.replace(/ /g, '%20');

        filename = filename ? filename + '.xls' : downloadedFileName + '.xls';
        var downloadingURL = document.createElement("a");
        document.body.appendChild(downloadingURL);

        if (navigator.msSaveOrOpenBlob) {
            var blob = new Blob(['\ufeff', htmlTable], {
                type: TableDataType
            });
            navigator.msSaveOrOpenBlob(blob, fileName);
        } else {

            downloadingURL.href = 'data:' + TableDataType + ', ' + htmlTable;
            downloadingURL.download = fileName;
            downloadingURL.click();
        }
    }

    function printTable() {
        var el = document.getElementById("tableData");

        el.setAttribute('border', '5px');
        el.setAttribute('cellpadding', '5');
        el.setAttribute('color', 'green');
        newPrint = window.open("");
        newPrint.document.write(el.outerHTML);
        newPrint.print();
        newPrint.close();
    }

</script>